第一章:  为什么选择同构JavaScript?
作者: Jason Strimpel and Maxime Najim

在2010年，Tweeter发布了它的新版重构网站。新版的Tweeter网站将UI渲染和业务逻辑交给了前端JavaScript。
对于2010年来说，这种架构方式是具有开创性的。
然而，在接下来的两年内，Tweeter又发布了它网站的再次重构版本，这个版本将渲染逻辑又重新回归到服务端。
这次架构上的改变使得Tweeter将页面加载的首屏时间缩短到了原来的1/5。
Tweeter将网站回归服务端渲染的举动在JavaScript社区引起了不小的震动。
Tweeter网站及业界的开发者很快意识到客户端渲染对网站性能会有显著的影响。

客户端应用最大的性能问题存在于首次下载JS文件的过程。
由于网络传输层面的TCP协议有一种调节流量的慢启动机制，而这种机制是让数据包以一个速度递增的方式传输的。
Ilya Gri‐gorik在他的《高性能浏览器网络》一书中解释了TCP在服务端和客户端传输64KB流量所需要经历的四次握手和百秒级别的延迟。



